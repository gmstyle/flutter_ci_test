name: Flutter CI/APK Release with Auto-Increment (No Tests)

on:
  push:
    branches:
      - main # Esegui questo workflow quando si fa un push su 'main'
  pull_request:
    branches:
      - main # Esegui questo workflow quando si apre una PR su 'main'
    types: [opened, synchronize, reopened] # Per attivare su apertura, aggiornamento o riapertura PR

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git for Commit
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6' # Sostituisci con la versione specifica di Flutter che usi
          channel: stable

      - name: Get Dependencies
        run: flutter pub get

      - name: Analyze Code
        run: flutter analyze

      - name: Increment App Version (Build Number)
        id: increment_version
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          CURRENT_VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}')
          echo "Current version from pubspec.yaml: $CURRENT_VERSION"

          APP_VERSION=$(echo $CURRENT_VERSION | cut -d'+' -f1)

          CURRENT_BUILD_NUMBER=$(echo $CURRENT_VERSION | cut -d'+' -f2)
          if [ -z "$CURRENT_BUILD_NUMBER" ]; then
            INCREMENTED_BUILD_NUMBER="1"
          else
            INCREMENTED_BUILD_NUMBER=$((CURRENT_BUILD_NUMBER + 1))
          fi

          NEW_VERSION="${APP_VERSION}+${INCREMENTED_BUILD_NUMBER}"
          echo "New version to be set: $NEW_VERSION"

          sed -i "s/^version: .*/version: $NEW_VERSION/" pubspec.yaml

          cat pubspec.yaml | grep version:

          echo "APP_VERSION=$APP_VERSION" >> "$GITHUB_OUTPUT"
          echo "INCREMENTED_BUILD_NUMBER=$INCREMENTED_BUILD_NUMBER" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Commit Version Changes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git add pubspec.yaml
          git diff --cached --exit-code || git commit -m "chore(release): Increment build number to ${{ steps.increment_version.outputs.INCREMENTED_BUILD_NUMBER }} [skip ci]"
          git push

      - name: Build Android Release APK
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          flutter build apk --release \
            --build-name=${{ steps.increment_version.outputs.APP_VERSION }} \
            --build-number=${{ steps.increment_version.outputs.INCREMENTED_BUILD_NUMBER }}

      - name: Upload Android APK as Artifact
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Create Git Tag and GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.increment_version.outputs.APP_VERSION }}+${{ steps.increment_version.outputs.INCREMENTED_BUILD_NUMBER }}
          name: Release v${{ steps.increment_version.outputs.APP_VERSION }} (Build ${{ steps.increment_version.outputs.INCREMENTED_BUILD_NUMBER }})
          body: |
            Nuova release della nostra app!

            Versione: ${{ steps.increment_version.outputs.APP_VERSION }}
            Build: ${{ steps.increment_version.outputs.INCREMENTED_BUILD_NUMBER }}

            Download l'APK qui sotto.
          draft: false
          prerelease: false
          files: build/app/outputs/flutter-apk/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}